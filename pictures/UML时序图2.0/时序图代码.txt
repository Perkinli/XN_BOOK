@startuml
actor "<u>:学生</u>" as user
participant "<u>:登录类</u>" as login
participant "<u>:用户类</u>" as userClass
database "<u>:MySQL</u>" as db
database "<u>:Redis</u>" as cache

user -> login : 提交登录凭证(学号/密码)
activate login
login -> userClass : verifyCredentials()
activate userClass
userClass -> db : SELECT user_info WHERE username=?
activate db
db --> userClass : UserDTO
deactivate db

alt 首次登录
    userClass -> userClass : checkFirstLogin()
    userClass --> login : 返回"需修改密码"
    login --> user : 显示修改密码页面
    user -> login : 提交新密码
    login -> userClass : updatePassword()
    userClass -> db : UPDATE password
else 非首次登录
    userClass -> cache : setSessionToken()
    activate cache
    cache --> userClass : OK
    deactivate cache
end
userClass --> login : AuthResult
deactivate userClass
login --> user : 返回登录结果(含token)
deactivate login
@enduml


@startuml
actor "<u>:学生</u>" as user
participant "<u>:活动类</u>" as activity
participant "<u>:预约类</u>" as reservation
participant "<u>:冲突检测类</u>" as checker
database "<u>:MySQL</u>" as db
database "<u>:Redis</u>" as cache

user -> activity : 获取活动详情(activityId)
activate activity
activity -> db : SELECT activity_info
activate db
db --> activity : ActivityDTO
deactivate db
activity --> user : 返回活动详情
deactivate activity

user -> reservation : 发起预约(activityId, userId)
activate reservation
reservation -> checker : validateConstraints()
activate checker
checker -> db : 检查院系/年级限制
checker -> cache : 检查剩余名额
checker --> reservation : ValidationResult
deactivate checker

alt 验证通过
    reservation -> db : INSERT reservation_record
    reservation -> cache : decr remaining_quota
    reservation -> activity : updateParticipantCount()
    activity -> db : UPDATE activity_stats
    reservation --> user : 预约成功通知
else 验证失败
    reservation --> user : 返回失败原因
end
deactivate reservation
@enduml

@startuml
actor "<u>:学生</u>" as user
participant "<u>:签到类</u>" as checkin
participant "<u>:违约记录类</u>" as violation
participant "<u>:消息类</u>" as notification
database "<u>:MySQL</u>" as db

user -> checkin : 请求签到(activityId, userId)
activate checkin
checkin -> db : SELECT activity_time
activate db
db --> checkin : start_time
deactivate db

alt 在有效时间内
    checkin -> db : INSERT checkin_record
    checkin -> notification : sendCheckinSuccess()
    activate notification
    notification --> user : 推送签到成功
    deactivate notification
else 超时未签到
    checkin -> violation : recordViolation()
    activate violation
    violation -> db : INSERT violation_record
    violation -> notification : sendViolationNotice()
    notification --> user : 推送违约提醒
    deactivate notification
    deactivate violation
end
checkin --> user : 返回签到结果
deactivate checkin
@enduml

@startuml
actor "<u>:管理员</u>" as admin
participant "<u>:活动类</u>" as activity
participant "<u>:冲突检测类</u>" as checker
participant "<u>:消息类</u>" as notification
database "<u>:MySQL</u>" as db

admin -> activity : 提交活动表单(formData)
activate activity
activity -> checker : detectConflicts()
activate checker
checker -> db : 查询同期活动
checker --> activity : ConflictReport
deactivate checker

alt 存在冲突
    activity --> admin : 返回冲突警示
else 无冲突
    activity -> db : INSERT activity_info
    activity -> notification : broadcastNewActivity()
    activate notification
    notification -> db : 获取目标用户
    notification --> user : 推送新活动通知
    deactivate notification
    activity --> admin : 发布成功确认
end
deactivate activity
@enduml

@startuml
actor "<u>:学生</u>" as user
participant "<u>:活动类</u>" as activity
database "<u>:Redis</u>" as cache
database "<u>:Elasticsearch</u>" as es
database "<u>:MySQL</u>" as db

user -> activity : 浏览活动列表()
activate activity
activity -> cache : getCachedActivities()
activate cache
cache --> activity : HotActivities[]
deactivate cache

activity -> db : SELECT basic_activity_info
activate db
db --> activity : Activity[]
deactivate db
activity --> user : 返回综合列表
deactivate activity

user -> activity : 高级搜索(keywords,filters)
activate activity
activity -> es : fullTextSearch()
activate es
es --> activity : RankedResults[]
deactivate es
activity -> db : 补充详细信息()
activate db
db --> activity : DetailedActivities[]
deactivate db
activity --> user : 返回搜索结果
deactivate activity
@enduml

@startuml
actor "<u>:学生</u>" as user
participant "<u>:成就类</u>" as achievement
participant "<u>:数据分析类</u>" as analyzer
database "<u>:MySQL</u>" as db
database "<u>:MongoDB</u>" as mongo

user -> achievement : 查看个人成就()
activate achievement
achievement -> analyzer : calculateAchievements(userId)
activate analyzer
analyzer -> db : 查询参与记录
analyzer -> mongo : 聚合统计指标
analyzer --> achievement : AchievementDTO
deactivate analyzer

achievement -> db : SELECT badge_definitions
activate db
db --> achievement : BadgeRules[]
deactivate db
achievement --> user : 返回成就面板(含徽章和统计)
deactivate achievement
@enduml

@startuml
actor "<u>:学生</u>" as user
actor "<u>:管理员</u>" as admin
participant "<u>:违约记录类</u>" as violation
participant "<u>:消息类</u>" as notification
database "<u>:MySQL</u>" as db

user -> violation : 提交申诉(violationId, reason)
activate violation
violation -> db : INSERT appeal_record
activate db
db --> violation : appealId
deactivate db
violation -> notification : notifyAdmin()
activate notification
notification --> admin : 新申诉提醒
deactivate notification
violation --> user : 申诉受理确认
deactivate violation

admin -> violation : 处理申诉(appealId, decision)
activate violation
violation -> db : UPDATE appeal_status
alt 申诉通过
    violation -> db : DELETE violation_record
    violation -> notification : sendAppealResult()
    notification --> user : 申诉通过通知
else 申诉驳回
    violation -> notification : sendRejection()
    notification --> user : 申诉驳回通知
end
deactivate violation
@enduml

@startuml
actor "<u>:管理员</u>" as admin
participant "<u>:数据分析类</u>" as analyzer
participant "<u>:活动类</u>" as activity
database "<u>:MySQL</u>" as db
database "<u>:Redis</u>" as cache

admin -> analyzer : 生成活动报告(activityId)
activate analyzer
analyzer -> activity : getActivityDetails()
activate activity
activity -> db : SELECT activity_metadata
db --> activity : ActivityStats
deactivate activity

analyzer -> db : 查询预约记录
analyzer -> cache : 获取实时参与数据
analyzer -> db : 聚合签到率指标

analyzer -> analyzer : generateVisualizations()
analyzer --> admin : 返回PDF报告(含图表和数据)
deactivate analyzer
@enduml
